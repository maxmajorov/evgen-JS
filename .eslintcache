[{"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\redux\\state.ts":"1","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\redux\\currencyReducer.ts":"2","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\App.tsx":"3","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"4","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\redux\\actions.ts":"5","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\index.tsx":"6","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson1\\lesson1.tsx":"7","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson3\\API.ts":"8","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson3\\lesson_3.ts":"9","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"10","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson3\\Lesson3.tsx":"11","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson4\\lesson_4.ts":"12","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson4\\Lesson4.tsx":"13","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson6\\lesson6.ts":"14","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson7\\lesson7.ts":"15","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson8\\lesson_8.js":"16"},{"size":286,"mtime":1609751766196,"results":"17","hashOfConfig":"18"},{"size":1713,"mtime":1651252088012,"results":"19","hashOfConfig":"18"},{"size":498,"mtime":1655996413401,"results":"20","hashOfConfig":"18"},{"size":3856,"mtime":1651257980299,"results":"21","hashOfConfig":"18"},{"size":1488,"mtime":1651250907458,"results":"22","hashOfConfig":"18"},{"size":319,"mtime":1609752860853,"results":"23","hashOfConfig":"18"},{"size":870,"mtime":1652471491153,"results":"24","hashOfConfig":"18"},{"size":983,"mtime":1653249358423,"results":"25","hashOfConfig":"18"},{"size":3154,"mtime":1653742069133,"results":"26","hashOfConfig":"18"},{"size":3871,"mtime":1609757735301,"results":"27","hashOfConfig":"18"},{"size":2069,"mtime":1653249396277,"results":"28","hashOfConfig":"18"},{"size":6695,"mtime":1653741981217,"results":"29","hashOfConfig":"18"},{"size":1460,"mtime":1653295605880,"results":"30","hashOfConfig":"18"},{"size":8523,"mtime":1654720592473,"results":"31","hashOfConfig":"18"},{"size":2269,"mtime":1655068858155,"results":"32","hashOfConfig":"18"},{"size":8491,"mtime":1656014782664,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"96hxud",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\redux\\state.ts",[],["72","73"],"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\redux\\currencyReducer.ts",[],["74","75"],"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\App.tsx",[],"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",[],"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\redux\\actions.ts",[],"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\index.tsx",[],["76","77"],"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson1\\lesson1.tsx",[],["78","79"],"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson3\\API.ts",[],"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson3\\lesson_3.ts",["80"],"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson3\\Lesson3.tsx",[],["81","82"],"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson4\\lesson_4.ts",["83"],"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson4\\Lesson4.tsx",[],"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson6\\lesson6.ts",["84","85"],"console.log(\"Lesson 6\");\r\n\r\n// Class\r\n// https://learn.javascript.ru/classes\r\n// https://medium.com/front-stories/%D0%BA%D0%B0%D0%BA-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%8E%D1%82-%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B-%D0%B2-javascript-7978c0003f1d\r\n// https://www.typescriptlang.org/docs/handbook/classes.html\r\n// https://www.youtube.com/watch?v=BASquaxab_w\r\n// https://www.youtube.com/watch?v=uLY9GXGMXaA\r\n\r\n// class Test {\r\n//   // В TS типизировать входные данные нужно дважды\r\n//   // Обязательно до конструктора => типо типизация возвращаемых значений\r\n//   name: string;\r\n//   age: number;\r\n//   constructor(name: string, age: number) {\r\n//     this.name = name;\r\n//     this.age = age;\r\n//   }\r\n\r\n//   someFunc() {\r\n//     console.log(\"Hello\");\r\n//   }\r\n// }\r\n\r\n// let obj = new Test(\"Max\", 32);\r\n// let obj2 = new Test(\"Olga\", 40);\r\n\r\n// console.log(obj);\r\n// console.log(obj2);\r\n\r\n// // super в классе наследнике является ссылка на constructor родительского класса\r\n// // super никогда не теряет связь с родительским constructor и его нельзя переопределить\r\n\r\n// class TestExtends extends Test {\r\n//   city: string;\r\n//   constructor(name: string, age: number, city: string) {\r\n//     super(name, age);\r\n//     this.city = city;\r\n//   }\r\n// }\r\n\r\n// let obj3 = new TestExtends(\"Pavel\", 6, \"Minsk\");\r\n// console.log(obj3);\r\n\r\n// Также можно создавать класс и без конструктора\r\n// Такие классы называются миксины ==> нужны для расширения\r\n// Классы помошники\r\n\r\n// class Helper {\r\n//   help1() {}\r\n//   help2() {}\r\n// }\r\n\r\n// class SuperHelp extends Helper {\r\n//   help3() {}\r\n// }\r\n\r\n// let obj4 = new SuperHelp();\r\n// console.log(obj4);\r\n\r\n// // public, private, protected, static, readonly\r\n// // при указании упрощается типизация\r\n\r\nclass publicTest {\r\n  constructor(public name: string, public age: number) {}\r\n}\r\n\r\nlet publicObj = new publicTest(\"Max\", 32);\r\nconsole.log(publicObj);\r\n\r\nclass privateTest {\r\n  constructor(private name: string, private age: number) {}\r\n  get privateName() {\r\n    return console.log(this.name);\r\n  }\r\n}\r\n\r\nlet privateObj = new privateTest(\"Max\", 32);\r\nconsole.log(privateObj.privateName);\r\n// Обратиться напрямую не смогу ==> использование геттеров и сеттеров\r\n// Если свойство объявлено как приватное то оно перестает наследоваться\r\n// Для того чтобы была возможность наследовать есть метод protected\r\n//\r\n//\r\nclass A {\r\n  say() {\r\n    console.log(\"Hi, im class A!\");\r\n  }\r\n}\r\n\r\nclass B extends A {\r\n  say() {\r\n    console.log(\"Hi, im from class B!!!\"); // переопределение метода\r\n    // или достучимся до прототипа родительского класса\r\n    super.say();\r\n  }\r\n}\r\n\r\nlet objA = new A();\r\nlet objB = new B();\r\n\r\nobjA.say();\r\nobjB.say();\r\n\r\n//\r\n\r\ninterface IPerson {\r\n  name: string;\r\n  age: number;\r\n  city: string;\r\n}\r\n\r\nclass Person implements IPerson {\r\n  constructor(public name: string, public age: number, public city: string) {}\r\n}\r\n\r\n// Interface показывает на какой на выходе должен получится объект\r\n// Interface можно расширять в отличие от Type\r\n// также extends как и классы\r\n\r\nconst person = new Person(\"Max\", 32, \"Minsk\");\r\nconsole.log(person);\r\n\r\n// Task 01\r\n// Создайте структуру с именем student, содержащую поля: имя и фамилия, номер группы,\r\n// успеваемость (массив из пяти элементов).\r\n// Создать массив из десяти элементов такого типа, упорядочить записи по возрастанию\r\n// среднего балла.\r\n// Добавить возможность вывода фамилий и номеров групп студентов, имеющих оценки,\r\n// равные только 4 или 5.\r\n\r\ninterface IStudent {\r\n  name: string;\r\n  soname: string;\r\n  group: number;\r\n  score: Array<number>;\r\n}\r\n\r\nclass Student {\r\n  constructor(\r\n    public name: string,\r\n    public soname: string,\r\n    public group: number,\r\n    public score: Array<number>\r\n  ) {}\r\n\r\n  average() {\r\n    return this.score.reduce((prev, next) => prev + next) / this.score.length;\r\n  }\r\n\r\n  sortUP() {}\r\n\r\n  studentsWithForOrFive() {\r\n    let temp: number = 0;\r\n\r\n    this.score.forEach((el) => (el === 4 || el === 5 ? temp++ : temp));\r\n\r\n    return temp === this.score.length\r\n      ? `${this.name}, ${this.group}`\r\n      : \"Studens not found\";\r\n  }\r\n}\r\n\r\nconst studentsScore = [\r\n  new Student(\"Max\", \"Predko\", 32, [10, 9, 8, 7, 5]),\r\n  new Student(\"Olga\", \"Predko\", 40, [10, 9, 9, 7, 5]),\r\n  new Student(\"Pavel\", \"Predko\", 6, [10, 9, 9, 9, 9]),\r\n  new Student(\"Karina\", \"Predko\", 20, [10, 10, 10, 10, 10]),\r\n  new Student(\"Oleg\", \"Shabanov\", 33, [10, 2, 8, 3, 5]),\r\n  new Student(\"Yura\", \"Bashlakov\", 41, [1, 2, 2, 3, 5]),\r\n  new Student(\"Tadik\", \"Siniy\", 38, [10, 4, 4, 9, 5]),\r\n  new Student(\"Kazik\", \"Violet\", 42, [0, 1, 5, 4, 5]),\r\n  new Student(\"Volodya\", \"Alik\", 22, [5, 5, 4, 5, 5]),\r\n  new Student(\"Yanak\", \"Shambetskiy\", 39, [4, 4, 4, 5, 5]),\r\n];\r\n\r\n// Сортируем вверх\r\nconst sortUP = studentsScore\r\n  .map((el) => el)\r\n  .sort((a, b) => a.average() - b.average());\r\n\r\nconst findStudentsFourOrFive = studentsScore.filter((st) =>\r\n  st.studentsWithForOrFive() !== \"Studens not found\"\r\n    ? st.studentsWithForOrFive()\r\n    : null\r\n);\r\n\r\nconsole.log(studentsScore);\r\nconsole.log(sortUP);\r\nconsole.log(findStudentsFourOrFive);\r\n\r\n// Task 02\r\n// Создать класс с двумя переменными. Добавить конструктор с входными параметрами и инициализирующий члены класса по умолчанию.\r\n// Можно ли создать метод на экземпляре класса который будет удалять сам экземпляр класса?\r\n// Можно ли создать метод класса который будет удалять экземпляр класса?\r\n\r\n// Task 03\r\n// Составить описание класса для представления времени. Предусмотреть возможности установки времени и изменения его отдельных\r\n// полей (час, минута, секунда) с проверкой допустимости вводимых значений. В случае недопустимых значений полей выбрасываются исключения.\r\n// Создать методы изменения времени на заданное количество часов, минут и секунд.\r\n// Создать метод выводящий время в строке формата HH:MM:SS\r\n// Создать класс по вышеуказанному описанию\r\n\r\n// Task 04\r\n// Класс Покупатель: Фамилия, Имя, Адрес, Номер банковского счета;\r\n// Методы: установка значений атрибутов, получение значений атрибутов, вывод информации.\r\n// Создать массив объектов данного класса.\r\n// Вывести список покупателей в алфавитном порядке и список покупателей, у которых номер кредитной карточки находится в заданном диапазоне.\r\n\r\n// Task 05\r\n// Создать класс машина - имеющий марку, число цилиндров, мощность. Определить конструктор и функцию печати.\r\n// Создать производный класс – грузовик, имеющий грузоподъемность кузова.\r\n// Определить функции переназначения марки и грузоподъемности.\r\n\r\n// just a plug\r\nexport default () => {};\r\n","D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson7\\lesson7.ts",["86","87"],"D:\\IT\\it-incubator\\evgen-JS-native-lessons\\src\\lessons\\lesson8\\lesson_8.js",["88","89","90","91","92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"93","replacedBy":"99"},{"ruleId":"95","replacedBy":"100"},{"ruleId":"93","replacedBy":"101"},{"ruleId":"95","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":102,"column":1,"nodeType":"105","endLine":102,"endColumn":25},{"ruleId":"93","replacedBy":"106"},{"ruleId":"95","replacedBy":"107"},{"ruleId":"103","severity":1,"message":"104","line":158,"column":1,"nodeType":"105","endLine":158,"endColumn":25},{"ruleId":"108","severity":1,"message":"109","line":132,"column":11,"nodeType":"110","messageId":"111","endLine":132,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":216,"column":1,"nodeType":"105","endLine":216,"endColumn":25},{"ruleId":"108","severity":1,"message":"112","line":27,"column":7,"nodeType":"110","messageId":"111","endLine":27,"endColumn":11},{"ruleId":"103","severity":1,"message":"104","line":55,"column":1,"nodeType":"105","endLine":55,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":8,"column":1,"nodeType":"115","messageId":"116","endLine":10,"endColumn":2},{"ruleId":"113","severity":1,"message":"114","line":12,"column":1,"nodeType":"115","messageId":"116","endLine":14,"endColumn":2},{"ruleId":"117","severity":1,"message":"118","line":182,"column":7,"nodeType":"110","messageId":"111","endLine":182,"endColumn":11},{"ruleId":"117","severity":1,"message":"119","line":224,"column":26,"nodeType":"110","messageId":"111","endLine":224,"endColumn":39},{"ruleId":"117","severity":1,"message":"120","line":267,"column":7,"nodeType":"110","messageId":"111","endLine":267,"endColumn":15},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],["121"],["122"],["121"],["122"],["121"],["122"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["121"],["122"],"@typescript-eslint/no-unused-vars","'IStudent' is defined but never used.","Identifier","unusedVar","'ford' is assigned a value but never used.","no-extend-native","Number prototype is read only, properties should not be added.","AssignmentExpression","unexpected","no-unused-vars","'uniq' is assigned a value but never used.","'getTreeValues' is assigned a value but never used.","'isSorted' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]